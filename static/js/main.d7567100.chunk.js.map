{"version":3,"sources":["App.js","ImagePreview/index.js","serviceWorker.js","index.js"],"names":["App","props","context","state","azureKey","dataUri","loading","emotion","isHappy","age","loadSong","opts","height","width","playerVars","autoplay","list","playsinline","modestbranding","index","controls","onSelectImage","bind","onTakePhotoAnimationDone","getAgeAndEmotion","getRecs","getMusicYearFromAge","isThisEmotionHappy","getPlaylistFromParams","this","setState","Promise","all","then","resolve","reject","azureSubscriptionKey","buff","Buffer","replace","fetch","method","body","headers","res","json","jsonData","console","log","length","faceAttributes","catch","tmpMusicYear","Date","getFullYear","leastSignificantDigitOfMusicYear","musicYear","happyConf","happiness","sadConf","sadness","Math","floor","random","style","justifyContent","alignItems","toString","className","active","spinner","sizeUnit","size","color","isFullscreen","React","Component","defaultProps","ImagePreview","classNameFullscreen","src","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7567100.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport YouTube from 'react-youtube';\nimport 'react-youtube-playlist/dist/styles.scss'\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport LoadingOverlay from 'react-loading-overlay'\nimport ImagePreview from './ImagePreview';\n\n\nclass App extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            azureKey: '1de04c834f214ba9b444ab120cb2ab1a',\n            dataUri: null,\n            loading: false,\n            emotion: this.props.emotion,\n            isHappy: true,\n            age: 20,\n            loadSong: false,\n            opts: {\n            height: '800px', width: '960px',\n            playerVars: { // https://developers.google.com/youtube/player_parameters\n                autoplay: 1,\n               // listType: 'radio',\n                list: 'PLmS86t_jmQvbpeehASz2Tosvj7d1VN-ZE',\n                playsinline: 1,\n                modestbranding: 1,\n                index: 10,\n                controls: 0\n            }\n            }\n        };\n        this.onSelectImage = this.onSelectImage.bind(this);\n        this.onTakePhotoAnimationDone = this.onTakePhotoAnimationDone.bind(this);\n        this.getAgeAndEmotion = this.getAgeAndEmotion.bind(this);\n        this.getRecs = this.getRecs.bind(this);\n        this.getMusicYearFromAge = this.getMusicYearFromAge.bind(this);\n        this.isThisEmotionHappy = this.isThisEmotionHappy.bind(this);\n        this.getPlaylistFromParams = this.getPlaylistFromParams.bind(this);\n    }\n\n    onTakePhotoAnimationDone(dataUri) {\n        this.setState({dataUri: dataUri, loading: true});\n\n        Promise.all([this.getAgeAndEmotion()])\n            .then( ([[age, emotion]])  => {\n                this.setState({age: age, emotion: emotion});\n                this.getRecs();\n                this.setState({loading: false, loadSong: true})\n            });\n\n    }\n\n    onSelectImage() {\n        //this.setState({loading: true});\n        // Analzye & make calls\n        this.setState({\n            loadSong: true\n        });\n    }\n\n    getAgeAndEmotion() {\n        return new Promise((resolve, reject) => {\n            var age = -1;\n            var emotion = null;\n            const azureSubscriptionKey = this.state.azureKey;\n            const uri = \"https://southcentralus.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceId=false&returnFaceLandmarks=false&returnFaceAttributes=age,emotion\"\n            var buff = new Buffer(this.state.dataUri.replace(/^data:image\\/(png|gif|jpeg);base64,/, ''), 'base64');\n\n            fetch(uri, {\n                method: 'post',\n                body: buff,\n                headers: {\n                    'Content-Type': 'application/octet-stream',\n                    'Ocp-Apim-Subscription-Key': azureSubscriptionKey,\n                }\n            })\n                .then((res) => res.json())\n                .then(function (jsonData) {\n                    console.log(jsonData);\n                    if (jsonData.length > 0) {\n                        //get the first face we found\n                        age = jsonData[0].faceAttributes.age;\n                        emotion = jsonData[0].faceAttributes.emotion;\n                        console.log(\"Azure: age = \" + age);\n                        console.log(\"Azure: emotion = \" + emotion);\n                        resolve([age, emotion]);\n                    } else {\n                        console.log(\"NO FACES FOUND\");\n                        reject();\n                    }\n                })\n                .catch(function () {\n                    reject();\n                });\n        })\n    }\n\n    /* Given the age of someone, get the music decade they are most likely to recognize */\n    getMusicYearFromAge(age) {\n        //handle error case\n        if(age < 0) {\n            return age;\n        }\n\n        var d = new Date();\n        var currentYear = d.getFullYear();\n\n        /* Get the exact music year  */\n        var tmpMusicYear = currentYear - age + 10;\n        var leastSignificantDigitOfMusicYear = tmpMusicYear % 10;\n\n        /* Get the music year at a flat decade */\n        var musicYear = tmpMusicYear - leastSignificantDigitOfMusicYear;\n\n        /* if the were born in the second half of the music year, suggest music from the next decade */\n        if (leastSignificantDigitOfMusicYear >= 5) {\n            musicYear += 10;\n        }\n\n        //handle edge cases\n        if (musicYear < 1950) {\n            musicYear = 1950;\n        } else if (musicYear > 2010) {\n            musicYear = 2010;\n        }\n\n        return musicYear;\n    }\n\n    /* If the happy emotion confidence is greater than the sad emotion confidence, return true */\n    isThisEmotionHappy(emotion) {\n        //handle error edge case\n        if(emotion == null) {\n            console.log(\"emotion was null\");\n            console.log(emotion);\n            return true;\n        }\n\n        var happyConf = emotion.happiness;\n        var sadConf = emotion.sadness;\n\n        console.log(\"happy:\" + happyConf);\n        console.log(\"sad:\" + sadConf);\n\n        if (sadConf > happyConf) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getPlaylistFromParams(musicYear, isHappy) {\n        switch (musicYear) {\n            case 1950:\n                if(isHappy){\n                    return \"PLNDhBcjuPp0-UCSML4DxFqqc5WN4aGcW1\";\n                }\n                else {\n                    return \"PLjLPKGJvC8TuhpLXMhskQUaC26zSBjCsM\";\n                }\n            case 1960:\n                if(isHappy){\n                    return \"PLPKXtd2AJvNkaZgrb0yK3UoQk7487TceH\";\n                }\n                else {\n                    return \"PLAZH8pP5KBzXiSfcH_2GgoDeXjtTUF3sM\";\n                }\n            case 1970:\n                if(isHappy){\n                    return \"PL9QL1AvNabH5u2gfi48VogStrPUY_LijY\";\n                }\n                else {\n                    return \"PLjyiHjKMhSuK-rChCn2Xl4RNfUcUhx-qA\";\n                }\n            case 1980:\n                if(isHappy){\n                    return \"PL857_Yj5tf8cek2iOFyZBE9XSOLOhW-0m\";\n                }\n                else {\n                    return \"PLT_7RtTUm0XwsUHTCuQog7xknmMCuvr4B\";\n                }\n            case 1990:\n                if(isHappy){\n                    return \"PLLWfa8Ng-FdBamt3JCTadmbdd9UtLFZ7K\";\n                }\n                else {\n                    return \"PLu1jpc624xfKGhWItKFNRPu7QylkwS-OR\";\n                }\n            case 2000:\n                if(isHappy){\n                    return \"PLPf_PZG3-WAGq4tgjU6m87Ksndn2Jz2OF\";\n                }\n                else {\n                    return \"PLIWqGUaiQxN7kL47fzQ87h0OlTaCyr8-o\";\n                }\n            case 2010:\n                if(isHappy){\n                    return 'RDQMU2NvmEhYGhM';\n                }\n                else {\n                    return \"RDAMVM3AtDnEC4zak\";\n                }\n            default:\n                return \"PL0B2BFACC0574C36F\";\n        }\n    }\n\n    getRecs() {\n        var age = this.state.age;\n        var emotion = this.state.emotion;\n        var opts = this.state.opts;\n        //get the playlistId\n        var musicYear = this.getMusicYearFromAge(age);\n        var isHappy = this.isThisEmotionHappy(emotion);\n        opts.playerVars.list = this.getPlaylistFromParams(musicYear, isHappy);\n        opts.playerVars.index = Math.floor((Math.random() * 10) + 1)\n        // set recs\n        this.setState({opts: opts, isHappy: isHappy});\n    }\n\n\n    render() {\n         if (this.state.loadSong) {\n            return (\n                <div style={{justifyContent: 'center', alignItems: 'center', height:'100%', width: '100%'}}>\n                    <h3><strong>Your personalized music selection</strong></h3><br/>\n                    <h2>Age: {this.state.age}</h2>\n                    <h2>Happy: {this.state.isHappy.toString()}</h2>\n                    <YouTube\n                        opts={this.state.opts}\n                    />\n                </div>)\n        } else {\n            return (\n                <div className=\"App\">\n                    {\n                        (this.state.loading)\n                            ? <LoadingOverlay active={true} spinner = {<ClipLoader sizeUnit={\"px\"} size={100} color={'#36d7b7'} loading={true}/>}>\n                                    <ImagePreview isFullscreen={false} dataUri={this.state.dataUri} /></LoadingOverlay>\n                            : <Camera onTakePhotoAnimationDone={this.onTakePhotoAnimationDone}/>\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nApp.defaultProps = {\n    \"emotion\": {\n        \"anger\": 0,\n        \"contempt\": 0,\n        \"disgust\": 0.001,\n        \"fear\": 0,\n        \"happiness\": 0.989,\n        \"neutral\": 0.009,\n        \"sadness\": 0,\n        \"surprise\": 0\n    }\n};\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/imagePreview.css';\n\nexport const ImagePreview = ({ dataUri, isFullscreen }) => {\n  let classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\n\n  return (\n    <div className={'demo-image-preview ' + classNameFullscreen}>\n      <img src={dataUri} />\n    </div>\n  );\n};\n\nImagePreview.propTypes = {\n  dataUri: PropTypes.string,\n  isFullscreen: PropTypes.bool\n};\n\nexport default ImagePreview;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}